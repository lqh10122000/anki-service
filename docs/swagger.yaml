definitions:
  handler.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.Customer:
    properties:
      address:
        type: string
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  model.Notes:
    properties:
      audioFilename:
        type: string
      createdAt:
        type: string
      deskID:
        type: integer
      id:
        type: integer
      modelName:
        type: string
      tags:
        type: string
      translateWord:
        type: string
      updatedAt:
        type: string
      word:
        type: string
    type: object
  response.ApiResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample API for managing complaints.
  title: Complaint Service API
  version: "1.0"
paths:
  /api/v1/addNotes:
    post:
      consumes:
      - application/json
      description: add notes to the system
      parameters:
      - description: Note data
        in: body
        name: notes
        required: true
        schema:
          $ref: '#/definitions/model.Notes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      security:
      - BearerAuth: []
      summary: add notes
      tags:
      - notes
  /api/v1/customers:
    delete:
      consumes:
      - application/json
      description: Get all customers with pagination
      parameters:
      - description: customer ID
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      security:
      - BearerAuth: []
      summary: create customer
      tags:
      - customers
    get:
      consumes:
      - application/json
      description: Get all customers with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      security:
      - BearerAuth: []
      summary: Get all customers
      tags:
      - customers
    post:
      consumes:
      - application/json
      parameters:
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/model.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      security:
      - BearerAuth: []
      tags:
      - customers
  /api/v1/customers/{id}:
    put:
      consumes:
      - application/json
      description: Update customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer object
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/model.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      security:
      - BearerAuth: []
      summary: Update a customer
      tags:
      - customers
  /api/v1/login:
    post:
      description: Get all customers with pagination
      parameters:
      - description: Register Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      summary: login
      tags:
      - auth
  /api/v1/register:
    post:
      description: Get all customers with pagination
      parameters:
      - description: Register Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiResponse'
      summary: register customer
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
